/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import javafx.application.Application;
import javafx.event.*;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import javafx.collections.*;
import javafx.scene.shape.*;

import java.sql.*;
//import oracle.jdbc.pool.*;
import java.util.*;
/**
 *
 * @author Hannah
 */
public class part2FX extends Application {
    
   ArrayList<Guest> Guests = new ArrayList<Guest>();
   ArrayList<Booking> Bookings = new ArrayList<Booking>();
   ArrayList<Employee> Employees = new ArrayList<Employee>();
   ArrayList<Room> Rooms = new ArrayList<Room>();
    
    Stage primaryStage = new Stage();
    Stage employeeStage = new Stage();
    Stage guestStage = new Stage();
    Scene mainScene;
    GridPane primaryPane = new GridPane();
    GridPane textPane = new GridPane();
    GridPane employeePane = new GridPane();
    GridPane editRoomPane = new GridPane();
    GridPane editEmployeePane=new GridPane();
    GridPane checkoutGuestPane=new GridPane();
    GridPane guestPane = new GridPane(); 
    GridPane emptabHolder= new GridPane();
    GridPane guestTabHolder= new GridPane();
    GridPane editGuestPane=new GridPane();
    GridPane guestPane2=new GridPane();
    TextField txtUsername = new TextField();
    TextField txtPassword = new TextField();
    TextArea Error = new TextArea();
    Button btnLogin = new Button("  Login ->  ");
    //employee labels
    Button userPassword = new Button();
    Button btnShow = new Button("Show room"); 
    Button btnShowAll = new Button("Show all room information"); 
    Label lblUsername = new Label("Username: ");
    Label lblPassword = new Label("Password: "); 
    Label lblBed = new Label("Bed: ");
    Label lblKitch = new Label("Kitch: ");
    Label lblCoffee = new Label("Coffee: ");
    Label lblAccess = new Label("Accessibility: ");
    Label lblRoomNumber = new Label("Room Number: "); 
    Label lblRoomPrice = new Label("Enter Room Price: "); 
    Button btnLogout = new Button("Logout ^");
    Button btnAddRoom = new Button("Add Room -> "); 
    TextField txtRoomNumber = new TextField();
    ListView employeeList = new ListView(); 
    TextField txtRoomPrice= new TextField();
    Label lblPrice= new Label("Room Price: ");
    
     //Tab 3 
    GridPane tab3Pane = new GridPane(); 
    Label lbluser3 = new Label("Enter Guest Username: ");
    TextField txtuser3 = new TextField(); 
    Label lblpass3 = new Label("Enter Guest password: "); 
    TextField txtPass3 = new TextField();
    Label lblname3 = new Label("Enter Guest name: "); 
    TextField txtName = new TextField(); 
    Label lblValueGuest = new Label("Enter Value Guest ID: "); 
    TextField txtValue = new TextField("Keep blank if n/a"); 
    Button btnCreate = new Button("Create Guest Account"); 
    Button btnVCreate=new Button("Create Value Guest Account");
    //Tab 5 
    GridPane tab5Pane = new GridPane(); 
    Label lbluser5 = new Label("Enter Employee Username: ");
    Label lblpass5 = new Label("Enter Employee Password: "); 
    Label lblname5 = new Label("Enter Employee Name: "); 
    TextField txtuser5 = new TextField();
    TextField txtPass5 = new TextField();
    TextField txtName5 = new TextField(); 
    Button btnCreate5 = new Button("Create Account"); 
    
    //Guest Labels
    Label lblFreeRooms = new Label("Free Rooms: ");
    Label lblCheckinYear = new Label("Check In Year: ");
    Label lblCheckInDay = new Label("Check In Day: ");
    Label lblCheckOutDay = new Label("Check Out Day: "); 
    TextField txtCheckYear = new TextField();
    TextField txtCheckIn = new TextField();
    TextField txtCheckOut = new TextField();
    ObservableList roomList = FXCollections.observableArrayList();
    ListView roomAvailable = new ListView(roomList);
    ComboBox<String> cboRoomView = new ComboBox<>(roomList);
    Button btnRoomView = new Button("List rooms available:");
    Button bookRoom = new Button("  Book Room  ");
    Button btnGuestLogout = new Button("  Logout  ");
    TextField guestList = new TextField();
    //Edit room labels
   TextField txtRoomPrice2= new TextField();
    Label lblPrice2= new Label("Room Price: ");
    Label lblBed2 = new Label("Bed: ");
    Label lblKitch2 = new Label("Kitch: ");
    Label lblCoffee2 = new Label("Coffee: ");
    Label lblAccess2 = new Label("Accessibility: ");
    Label lblRoomNumber2 = new Label("Room Number: "); 
    Button btnLogout2 = new Button("Logout ^");
    Button btnAddRoom2 = new Button("Add Room -> "); 
    TextField txtRoomNumber2 = new TextField();
    
    Button findRoom= new Button("  Find Room  ");
    Button activateRoom= new Button("  Activate  ");
    Button deactivateRoom= new Button("  Deactivate  ");
    Button editRoom=new Button("  Edit Room  ");
    //edit Guest Labels
    Label guestNamelbl= new Label("Enter Guest Name: ");
    Label makeChangelbl=new Label("Select what is to be Changed: ");
    Label enterNP= new Label("Enter new Name/Password: ");
    Button findGuest=new Button("  Find Guest  ");
    Button editGuest= new Button("  Make Edit  ");
    TextField entGuestName=new TextField ();
    TextField entGuestPass=new TextField();
    Label OldPass= new Label("Enter Old Password");
    TextField guestPassValue = new TextField("Change if Changing Pass ");
    //edit Employee Labels
    Label empValNamelbl= new Label("Enter Employee Name: ");
    Label makeEmpChangelbl=new Label("Select what is to be Changed: ");
    Label enterEmpNP= new Label("Enter new Name/Password: ");
    Button findEmp=new Button("  Find Employee  ");
    Button editEmp= new Button("  Make Edit  ");
    TextField entEmpName=new TextField ();
    TextField entEmpPass=new TextField();
    Label oldEmpPass= new Label("Enter Old Password");
    TextField oldEmpValue=new TextField("Change if Changing Pass ");
    // Checkout Guest Labels
    Label guestChecklbl=new Label("Enter Guest Name to check out: ");
    Button endBooks=new Button("End Booking ");
    TextField guestCheckName=new TextField();
    //editguest GuestLabels
    Label guestNamelbl2 = new Label("Enter Guest UserName: ");
    Label makeChangelbl2 = new Label("Select what is to be changed: ");
    Label enterNP2 = new Label("Enter new Name/Password: ");
    TextField txtGuestUserName = new TextField();
    TextField txtNewCredentials = new TextField();
    Button findGuest2 = new Button("  Find Guest  ");
    Button editGuest2 = new Button("  Make Edit  ");
    
    // tabs
        public TabPane tabPane = new TabPane(); 
    public Tab tab1 = new Tab("Create a Room");
    public Tab tab2 = new Tab("Edit Room");
    public Tab tab3  = new Tab("Create Guest Account");
    public Tab tab4 = new Tab("Edit Guest"); 
    public Tab tab5 = new Tab("Create Employee Account");
    public Tab tab6 = new Tab ("Edit Employee Account"); 
    public Tab tab7 = new Tab("Check out Guest"); 
    // guest tabs
    public TabPane guestTabPane = new TabPane();
    public Tab tab8 = new Tab("Book a Room");
    public Tab tab9 = new Tab("Book a Edit Guest");

    ObservableList<String> options = 
        FXCollections.observableArrayList
        (
            "Employee",
            "Guest"   
        );
    final ComboBox comboBox = new ComboBox(options);

    @Override
    public void start(Stage primaryStage) {
        Scene mainScene = new Scene(primaryPane, 400, 200);
        primaryStage.setScene(mainScene);
        primaryStage.setTitle("DayBreak Management System: Login ");
        primaryStage.show();
        
        ChoiceBox<String> choiceBox = new ChoiceBox<>(); 
        choiceBox.getItems().add("Employee"); 
        choiceBox.getItems().add("Guest"); 
        choiceBox.setValue("Employee");
        
        //Choice Boxes for Employee View
        //Bed Choice Box
        ChoiceBox<String> bedChoiceBox = new ChoiceBox<>();
        bedChoiceBox.getItems().addAll("1 Queen Bed", "2 Queen Beds", "1 King Bed"); 
        
        //Kitchen Choice Box
        ChoiceBox<String> kitchChoiceBox = new ChoiceBox<>();
        kitchChoiceBox.getItems().addAll("Microwave", "Fridge"); 
        
        //Coffee Choice Box
        ChoiceBox<String> coffeeChoiceBox = new ChoiceBox<>();
        coffeeChoiceBox.getItems().addAll("1-Cup Std. Coffee Machine", "Keurig Hot K200 Machine"); 
        
        //Accessibility Choice Box
        ChoiceBox<String> accessChoiceBox = new ChoiceBox<>();
        accessChoiceBox.getItems().addAll("Standard Room", "Enhance Accessibility Room"); 
        //editView Choice Box
        ChoiceBox<String> bedChoiceBox2 = new ChoiceBox<>();
        bedChoiceBox2.getItems().addAll("1 Queen Bed", "2 Queen Beds", "1 King Bed"); 
        
        //Kitchen Choice Box
        ChoiceBox<String> kitchChoiceBox2 = new ChoiceBox<>();
        kitchChoiceBox2.getItems().addAll("Microwave", "Fridge"); 
        
        //Coffee Choice Box
        ChoiceBox<String> coffeeChoiceBox2 = new ChoiceBox<>();
        coffeeChoiceBox2.getItems().addAll("1-Cup Std. Coffee Machine", "Keurig Hot K200 Machine"); 
        
        //Accessibility Choice Box
        ChoiceBox<String> accessChoiceBox2 = new ChoiceBox<>();
        accessChoiceBox2.getItems().addAll("Standard Room", "Enhance Accessibility Room"); 
       //Guest Edit Choice Box
       ChoiceBox<String> editGuestBox = new ChoiceBox<>();
        editGuestBox.getItems().addAll("Username","Password");
           // employee edit choice Box
        ChoiceBox<String> editEmpBox = new ChoiceBox<>();
        editEmpBox.getItems().addAll("Username","Password");
        //GuestBox2
        ChoiceBox<String> editGuestBox2 = new ChoiceBox<>();
        editGuestBox2.getItems().addAll("Username", "Password");
        
        btnLogin.setOnAction(e ->{
            if(choiceBox.getValue().equals("Employee"))
            {
  
                Scene employeeScene = new Scene(emptabHolder, 700, 1000); 
                employeeStage.setScene(employeeScene);
                employeeStage.setTitle("Employee View:");
                employeeStage.show();
                primaryStage.hide();
                tabPane.getTabs().add(tab1);
                tabPane.getTabs().add(tab2);
                tabPane.getTabs().add(tab3);
                tabPane.getTabs().add(tab4);
                tabPane.getTabs().add(tab5);
                tabPane.getTabs().add(tab6);
                tabPane.getTabs().add(tab7);
                emptabHolder.add(tabPane,0,0);
                tab1.setContent(employeePane);
                tab2.setContent(editRoomPane);
                tab3.setContent(tab3Pane);
                tab4.setContent(editGuestPane);
                tab5.setContent(tab5Pane); 
                tab6.setContent(editEmployeePane);
                tab7.setContent(checkoutGuestPane);
            }
            else if(choiceBox.getValue().equals("Guest"))
            {
            
                 
               
                Scene guestScene = new Scene(guestTabHolder, 1000, 1200);
                guestStage.setScene(guestScene);
                guestStage.setTitle("Guest View:");
                guestStage.show();
                primaryStage.hide();
                guestTabPane.getTabs().add(tab8);
                guestTabPane.getTabs().add(tab9);
                guestTabHolder.add(guestTabPane, 0, 0);
                tab8.setContent(guestPane);
                tab9.setContent(guestPane2);
            }
             }); 
            
            //Employee add room 
            btnAddRoom.setOnAction(x -> {
              
                String bedChoice = bedChoiceBox.getValue(); 
                String kitchChoice = kitchChoiceBox.getValue();
                String coffeeChoice = coffeeChoiceBox.getValue();
                String accessChoice = accessChoiceBox.getValue();
                String roomPrice=txtRoomPrice.getText();
                String roomNum = txtRoomNumber.getText(); 
                int bookedQuantity  = 0; 
                String roomDescrip = "Room "+ roomNum + " Booking Qty: " + bookedQuantity  + " Available "; 
                employeeList.getItems().add(roomDescrip); 
                int i = Integer.parseInt(roomNum); 
                double txtPrice= Double.parseDouble(roomPrice);
                int bedNum =0; 
                
                if(bedChoice.equals("1 Queen Bed"))
                    bedNum = 1; 
                else if(bedChoice.equals("2 Queen Beds"))
                    bedNum =2; 
                else if(bedChoice.equals("1 King Bed"))
                    bedNum = 3;
                
                int kitchNum =0;
                if(kitchChoice.equals("Microwave"))
                    kitchNum =1; 
                else if(kitchChoice.equals("Fridge"))
                    kitchNum =2; 
                
                int coffeeNum =0; 
                if(coffeeChoice.equals("1-Cup Std. Coffee Machine"))
                    coffeeNum = 1;
                else if(coffeeChoice.equals("Keurig Hot K200 Machine"))
                    coffeeNum =2; 
                
                int accessNum =0;
                if(accessChoice.equals("Standard Room"))
                    accessNum =1;
                else if(accessChoice.equals("Enhance Accessibility Room"))
                    accessNum =2;
                 
                 // Where should I get cost from?
                Rooms.add(new Room(bedNum, kitchNum, coffeeNum, accessNum, i, txtPrice));
                roomList.add(new Room(bedNum, kitchNum, coffeeNum, accessNum, i, txtPrice));
   // edit room buttons
        });
            editRoom.setOnAction(e->{
                String bedChoice2 = bedChoiceBox2.getValue(); 
                String kitchChoice2 = kitchChoiceBox2.getValue();
                String coffeeChoice2 = coffeeChoiceBox2.getValue();
                String accessChoice2 = accessChoiceBox2.getValue();
                String roomNum = txtRoomNumber2.getText();
                String roomPrice=txtRoomPrice2.getText();
                int roomNum2 = Integer.parseInt(roomNum); 
                double txtPrice2= Double.parseDouble(roomPrice);
                int bedNum=0;
                 if(bedChoice2.equals("1 Queen Bed"))
                    bedNum = 1; 
                else if(bedChoice2.equals("2 Queen Beds"))
                    bedNum =2; 
                else if(bedChoice2.equals("1 King Bed"))
                    bedNum = 3;
                
                int kitchNum =0;
                if(kitchChoice2.equals("Microwave"))
                    kitchNum =1; 
                else if(kitchChoice2.equals("Fridge"))
                    kitchNum =2; 
                
                int coffeeNum =0; 
                if(coffeeChoice2.equals("1-Cup Std. Coffee Machine"))
                    coffeeNum = 1;
                else if(coffeeChoice2.equals("Keurig Hot K200 Machine"))
                    coffeeNum =2; 
                
                int accessNum =0;
                if(accessChoice2.equals("Standard Room"))
                    accessNum =1;
                else if(accessChoice2.equals("Enhance Accessibility Room"))
                    accessNum =2;
                    int k = 0;
                 for (int i = 0; i < Rooms.size(); i++) {
               if (Rooms.get(i).getRoomNumber() == roomNum2) {
                    k = i;
                 }
                    }
                //create new entry and replace old room values
                Room editedRoom = new Room(bedNum, kitchNum, coffeeNum, accessNum, roomNum2, txtPrice2);
                        Rooms.set(k, editedRoom);
                        roomList.set(k, editedRoom);
            });
        activateRoom.setOnAction(e->{
            String roomNum = txtRoomNumber2.getText();
                   int roomNumb=Integer.parseInt(roomNum);
                    for (int i = 0; i < Rooms.size(); i++) {
                     if (Rooms.get(i).getRoomNumber() == roomNumb) {
                      Rooms.get(i).freeThisRoom();
                       }
              }
        });
        deactivateRoom.setOnAction(e->{
            String roomNum = txtRoomNumber2.getText();
                   int roomNumb=Integer.parseInt(roomNum);
                    for (int i = 0; i < Rooms.size(); i++) {
                     if (Rooms.get(i).getRoomNumber() == roomNumb) {
                      Rooms.get(i).deactivateThisRoom();
                       }
              }
         // guest creating buttons
        });
         btnCreate.setOnAction(e->{
              String gUsername= txtuser3.getText();
              String gPassword= txtPass3.getText();
              String gName= txtName.getText();
              //String gID=txtValue.getText();
              Guests.add(new Guest(gUsername, gPassword, gName));
              
          });
           btnVCreate.setOnAction(x->{
              String gUsername= txtuser3.getText();
              String gPassword= txtPass3.getText();
              String gName= txtName.getText();
              String gID=txtValue.getText();
              
              Guests.add(new valueGuest(gUsername, gPassword, gName,gID));
              
          });
           // Guest Edit button
           editGuest.setOnAction(e->{
             String guestName= entGuestName.getText();
             if(editGuestBox.getValue().equals("Username")){
                 String entGuest=entGuestPass.getText();
                 for (int i=0; i<Guests.size();i++){
                if(Guests.get(i).getGuestName().equals(guestName)){
                // checkz=true;
                  Guests.get(i).setGuestName(entGuest);
                                                }
                                            } 
                 // validation here for if its in there or if its not using checks maybe
             }
             else if(editGuestBox.getValue().equals("Password")){
                 String entPass=entGuestPass.getText();
                 String entOldPass=guestPassValue.getText();
                  for (int i=0; i<Guests.size();i++){
                  if(Guests.get(i).getGuestName().equals(guestName)){
                     //meCheck=true;
                   int checkPass=Guests.get(i).setPassword(entOldPass,entPass);
                   //if(checkPass==1){
                    // validation here System.out.println("Password Changed!");
                                                    // }
                                                     //else{
                                                        // System.out.println("Same Password as Before");
                                                     }
                                                }
             }
           });
           //Create comboBox in guest pane
           btnRoomView.setOnAction(e -> {
            guestList.clear();
             if (cboRoomView.getSelectionModel().isEmpty()){
                guestList.setText("The dropdown menu has no selection");
             }
            else{
            int roomIndex = cboRoomView.getSelectionModel().getSelectedIndex();
           
            guestList.clear();
            guestList.appendText(roomList.get(roomIndex).toString() + "\n");
            for (int i = 0; i < roomList.size(); i++)
            {
              
               Room checkRoom = roomList.get(i);
               
               
               Room currentRoom = roomList.get(roomIndex);

               guestList.appendText(checkRoom.toString());
                             
            }
           }
        cboRoomView.setValue(null);
        
        });
           
           // logout buttons
           btnLogout.setOnAction(e ->{
               employeeStage.hide(); 
               primaryStage.setScene(mainScene);
                primaryStage.setTitle("DayBreak Management System: Login ");
                 primaryStage.show();
                if(choiceBox.getValue().equals("Employee"))
                {

                    Scene employeeScene = new Scene(emptabHolder, 700, 700); 
                    employeeStage.setScene(employeeScene);
                    employeeStage.setTitle("Employee View:");
                    employeeStage.show();
                    primaryStage.hide();

                }
                else if(choiceBox.getValue().equals("Guest"))
                {

                    Scene guestScene = new Scene(guestPane, 1000, 1200); 
                    guestStage.setScene(guestScene);
                    guestStage.setTitle("Guest View: ");
                    guestStage.show();
                    primaryStage.hide();
                    
                }
                 });
           
           btnCreate5.setOnAction(e->{
              String empUsername= txtuser5.getText();
              String empPassword= txtPass5.getText();
              String empName= txtName5.getText();
              //String gID=txtValue.getText();
              Employees.add(new Employee(empUsername, empPassword, empName));
           });
        editEmp.setOnAction(e->{
             String empName= entEmpName.getText();
             if(editEmpBox.getValue().equals("Username")){
                 String entEmployee=entEmpPass.getText();
                 for (int i=0; i<Employees.size();i++){
                if(Employees.get(i).getEmployeeName().equals(empName)){
                // checkz=true;
                  Employees.get(i).setEmployeeName(entEmployee);
                                                }
                                            } 
                 // validation here for if its in there or if its not using checks maybe
             }
             else if(editEmpBox.getValue().equals("Password")){
                 String entPass=entEmpPass.getText();
                 String entOldPass=oldEmpValue.getText();
                  for (int i=0; i<Employees.size();i++){
                  if(Employees.get(i).getEmployeeName().equals(empName)){
                     // validation can go here as well? 
                   int checkPass=Employees.get(i).setPassword(entOldPass,entPass);
                    // validation can go here
             }
                  }
             }
            
        });
        endBooks.setOnAction(e->{
            String guestName=guestCheckName.getText();
             Bookings.forEach((n) -> {
              if (guestName.equals(n.bookedGuest)) {
              n.endBooking();
             }

          });
        });
        
        //Primary Pane 
        primaryPane.setAlignment(Pos.CENTER);
        //primaryPane.add(new Label("Add Items to our Menu:"), 0, 0);
        primaryPane.add(lblUsername, 0, 0);
//        primaryPane.add(txtDesc, 1, 1);
        primaryPane.add(lblPassword, 0, 1);
        primaryPane.add(txtUsername, 1, 0 );
        primaryPane.add(txtPassword, 1, 1);
        primaryPane.add(btnLogin, 1, 3);
        primaryPane.add(choiceBox, 1, 2);
        
        //Employee Pane 
        employeePane.add(employeeList, 2, 1, 1, 15);
        employeePane.add(lblBed, 0,0);
        employeePane.add(lblKitch, 0, 2);
        employeePane.add(lblCoffee, 0, 4);
        employeePane.add(lblAccess, 0,6); 
        employeePane.add(lblRoomNumber, 0, 8);
        employeePane.add(lblRoomPrice, 0, 10);
        employeePane.add(bedChoiceBox, 1, 0); 
        employeePane.add(kitchChoiceBox, 1, 2); 
        employeePane.add(coffeeChoiceBox, 1,4);
        employeePane.add(accessChoiceBox, 1, 6);  
        employeePane.add(btnLogout, 0, 18); 
        employeePane.add(btnAddRoom, 0, 12); 
        employeePane.add(txtRoomNumber, 1, 8);    
        employeePane.add(txtRoomPrice, 1, 10); 
        employeePane.add(btnShow, 0, 14);
        employeePane.add(btnShowAll,0, 16);
        employeePane.setVgap(5);
        employeePane.setHgap(5);
        
        //Edit Room Pane
        editRoomPane.add(lblRoomNumber2,0,0);
        editRoomPane.add(lblKitch2, 0, 1);
        editRoomPane.add(lblCoffee2, 0, 2);
        editRoomPane.add(lblAccess2,0,3);
        editRoomPane.add(lblBed2,0,4);
        editRoomPane.add(lblPrice2,0,5);
        editRoomPane.add(txtRoomNumber2,2,0);
        editRoomPane.add(findRoom,3,0);
        editRoomPane.add(kitchChoiceBox2, 2, 1);
        editRoomPane.add(coffeeChoiceBox2, 2,2);
        editRoomPane.add(accessChoiceBox2, 2, 3);
        editRoomPane.add(bedChoiceBox2,2,4);
        editRoomPane.add(txtRoomPrice2, 2, 5);
        editRoomPane.add(editRoom,0,6);
        editRoomPane.add(activateRoom, 1, 6);
        editRoomPane.add(deactivateRoom,2,6);
        editRoomPane.setVgap(15);
        editRoomPane.setHgap(15);
        // edit guest Pane 
        editGuestPane.add(guestNamelbl, 0, 0);
        editGuestPane.add(makeChangelbl, 0, 1);
        editGuestPane.add(enterNP,0,3);
        editGuestPane.add(editGuest,0,4);
        editGuestPane.add(entGuestName,2,0);
        editGuestPane.add(findGuest,3,0);
        editGuestPane.add(editGuestBox,2,1);
        editGuestPane.add(entGuestPass, 2, 3);
        editGuestPane.add(OldPass,0, 2);
        editGuestPane.add(guestPassValue,2,2);
        editGuestPane.setVgap(15);
        editGuestPane.setHgap(15);
        //editEmpPane
        editEmployeePane.add(empValNamelbl, 0, 0);
        editEmployeePane.add(makeEmpChangelbl,0,1);
        editEmployeePane.add(enterEmpNP, 0, 3);
        editEmployeePane.add(editEmp,0,4);
        editEmployeePane.add(entEmpName,2,0);
        editEmployeePane.add(findEmp,3,0);
        editEmployeePane.add(editEmpBox,2,1);
        editEmployeePane.add(entEmpPass,2,3);
        editEmployeePane.add(oldEmpPass, 0, 2);
        editEmployeePane.add(oldEmpValue,2,2);
        editEmployeePane.setVgap(15);
        editEmployeePane.setHgap(15);
        // Guest Checkout Pane
        checkoutGuestPane.add(guestChecklbl,0,0);
        checkoutGuestPane.add(endBooks,0,1);
        checkoutGuestPane.add(guestCheckName,1,0);
        checkoutGuestPane.setVgap(15);
        checkoutGuestPane.setHgap(15);
        //Guest Pane
        guestPane.add(lblFreeRooms, 0, 7);
        guestPane.add(lblCheckinYear, 0, 1);
        guestPane.add(lblCheckInDay, 0, 2);
        guestPane.add(lblCheckOutDay, 0,3 );
        guestPane.add(txtCheckYear, 3,1);
        guestPane.add(txtCheckIn, 3, 2);
        guestPane.add(txtCheckOut, 3, 3);
        guestPane.add(cboRoomView,0,4);
        guestPane.add(btnRoomView,1,4);
        guestPane.add(bookRoom, 0, 12);
        guestPane.add(btnGuestLogout, 3, 12);
        guestPane.add(guestList,0,8);
        guestPane.setVgap(5);
        guestPane.setHgap(5);
        
        //Tab 3 Panes
        tab3Pane.add(lbluser3, 0, 0);
        tab3Pane.add(lblpass3, 0, 4);
        tab3Pane.add(lblname3, 0, 8);
        tab3Pane.add(lblValueGuest, 0, 12); 
        tab3Pane.add(txtuser3, 3,0);
        tab3Pane.add(txtPass3, 3, 4); 
        tab3Pane.add(txtName, 3,8); 
        tab3Pane.add(txtValue, 3, 12); 
        tab3Pane.add(btnCreate, 0, 16);
        tab3Pane.add(btnVCreate,2,16);
        tab3Pane.setVgap(5);
        tab3Pane.setHgap(5); 
        
        //Tab 5 Pane
        tab5Pane.add(lbluser5, 0, 0);
        tab5Pane.add(lblpass5, 0,2);
        tab5Pane.add(lblname5, 0, 4); 
        tab5Pane.add(txtuser5, 3, 0);
        tab5Pane.add(txtPass5, 3, 2); 
        tab5Pane.add(txtName5, 3, 4);
        tab5Pane.add(btnCreate5, 0, 6); 
        tab5Pane.setVgap(5);
        tab5Pane.setHgap(5); 
        
        //edit guest Guest Pane layout
        guestPane2.setVgap(10);
        guestPane2.setHgap(10);
        guestPane2.add(guestNamelbl2, 0, 1);
        guestPane2.add(findGuest2, 0, 2);
        guestPane2.add(editGuestBox2, 0, 3);
        guestPane2.add(txtGuestUserName, 1, 1);
        guestPane2.add(enterNP2, 0, 4);
        guestPane2.add(txtNewCredentials, 1, 4);
        guestPane2.add(editGuest2, 0, 5);
        
        
//        primaryPane.add(Error, 1, 4);
//        primaryPane.add(txtPrice, 1, 2);
//        primaryPane.add(btnAddNewItem, 1, 3);
//        primaryPane.add(lstItemsList, 2, 1, 1, 3);
        
    }

    
    public static void main(String[] args) {
        launch(args);
//        
//    ArrayList<Guest> Guests = new ArrayList<Guest>();
//    ArrayList<Booking> Bookings = new ArrayList<Booking>();
//    ArrayList<Employee> Employees = new ArrayList<Employee>();
//    ArrayList<Room> Rooms = new ArrayList<Room>();
//    //ArrayList<valueGuest> valueGuests = new ArrayList<valueGuest>();
//    Guest currentGuest;
//    Employee currentEmployee;
//    char UserType;
//    Scanner in = new Scanner(System.in);
        
  //      Employee employee1 = new Employee("Matt", "password", "Matt Dreyer");
  //      Employees.add(employee1);
//        Employee employee2 = new Employee("Hannah", "password", "Hannah Ford");
//        Employees.add(employee2);
//        Guest guest1 = new Guest("Benji", "password", "Benji Ford");
//        Guests.add(guest1);
//        Guest guest2 = new Guest("Brad", "password", "Brad Pitt");
//        Guests.add(guest2);
//        valueGuest valueGuest1 = new valueGuest("Bob", "password", "Bob Smith");
//        valueGuests.add(valueGuest1);
//        Room room1 = new Room(1, 1, 1, 1, 75);
//        Rooms.add(room1);
//        Room room2 = new Room(1, 1, 1, 75, 100);
//        Rooms.add(room2);
//        Room room3 = new Room(2, 2, 2, 100, 101);
//        Rooms.add(room3);
//        Room room4 = new Room(3, 1, 1, 100, 102);
//        Rooms.add(room4);
//        Room room5 = new Room(1, 2, 2, 150, 103);
//        Rooms.add(room5);
    }

}
